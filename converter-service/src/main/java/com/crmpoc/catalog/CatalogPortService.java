
package com.crmpoc.catalog;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 *
 */
@WebServiceClient(name = "CatalogPortService", targetNamespace = "http://www.crmpoc.com/customer", wsdlLocation = "http://api-gateway:9060/catalog-service/ws/catalogs.wsdl?wsdl")
public class CatalogPortService
    extends Service
{

    private final static URL CATALOGPORTSERVICE_WSDL_LOCATION;
    private final static WebServiceException CATALOGPORTSERVICE_EXCEPTION;
    private final static QName CATALOGPORTSERVICE_QNAME = new QName("http://www.crmpoc.com/customer", "CatalogPortService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = com.crmpoc.catalog.CatalogPortService.class.getResource("/static/catalogs.wsdl");
            if (url == null) throw new MalformedURLException("static/catalogs.wsdl does not exist in the module.");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        CATALOGPORTSERVICE_WSDL_LOCATION = url;
        CATALOGPORTSERVICE_EXCEPTION = e;
    }

    public CatalogPortService() {
        super(__getWsdlLocation(), CATALOGPORTSERVICE_QNAME);
    }

    public CatalogPortService(WebServiceFeature... features) {
        super(__getWsdlLocation(), CATALOGPORTSERVICE_QNAME, features);
    }

    public CatalogPortService(URL wsdlLocation) {
        super(wsdlLocation, CATALOGPORTSERVICE_QNAME);
    }

    public CatalogPortService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, CATALOGPORTSERVICE_QNAME, features);
    }

    public CatalogPortService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CatalogPortService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns CatalogPort
     */
    @WebEndpoint(name = "CatalogPortSoap11")
    public CatalogPort getCatalogPortSoap11() {
        return super.getPort(new QName("http://www.crmpoc.com/customer", "CatalogPortSoap11"), CatalogPort.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CatalogPort
     */
    @WebEndpoint(name = "CatalogPortSoap11")
    public CatalogPort getCatalogPortSoap11(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.crmpoc.com/customer", "CatalogPortSoap11"), CatalogPort.class, features);
    }

    private static URL __getWsdlLocation() {
        if (CATALOGPORTSERVICE_EXCEPTION!= null) {
            throw CATALOGPORTSERVICE_EXCEPTION;
        }
        return CATALOGPORTSERVICE_WSDL_LOCATION;
    }

}
