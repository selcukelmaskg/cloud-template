spring:
  application:
    name: asset-service
  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
server:
  port: 9030
  servlet:
    session:
      cookie:
        http-only: true

eureka:
  instance:
    instance-id: ${spring.application.name}-${random.uuid}
  client:
    service-url:
      defaultZone: http://${eureka.server.host}:${eureka.server.port}/eureka/
    register-with-eureka: true
    fetch-registry: true
  server:
    host: localhost
    port: 8090

kafka:
  topic:
    log: system-log

management:
  endpoint:
    health:
      enabled: true
      show-details: always

---

spring:
  profiles: dev
  data:
    mongodb:
      uri: ${mongodb.asset.uri:${mongodb.uri:mongodb://localhost:27017}}
      database: crmpoc-asset-service
  kafka:
    bootstrap-servers: localhost:9092

eureka:
  instance:
    prefer-ip-address: true

---

spring:
  profiles: docker
  data:
    mongodb:
      uri: ${mongodb.asset.uri:${mongodb.uri:mongodb://mongodb:27017}}
      database: crmpoc-asset-service
  kafka:
    bootstrap-servers: kafka:9092

eureka:
  server:
    host: eureka-server
    port: 8090
  instance:
    prefer-ip-address: true

---

spring:
  profiles: prod
  data:
    mongodb:
      uri: ${mongodb.asset.uri:${mongodb.uri:mongodb://mongodb:27017}}
      database: crmpoc-asset-service
  kafka:
    bootstrap-servers: kafka:9092

eureka:
  instance:
    prefer-ip-address: true

---

spring:
  profiles: test
  data:
    mongodb:
      uri: ${mongodb.asset.uri:${mongodb.uri:mongodb://localhost:27017}}
      database: crmpoc-asset-service
  kafka:
    bootstrap-servers: localhost:9092

eureka:
  instance:
    prefer-ip-address: true
